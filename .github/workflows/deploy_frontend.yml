name: Deploy CDK Infrastructure

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**' # Run the workflow when changes are made to the frontend directory
  workflow_dispatch: 
  # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "frontend"
          IMAGE_TAG: latest
        run: |
            # Build a docker container and push it to ECR
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./frontend
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1' # LTS 

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python dependencies for CDK
        run: |
          python -m pip install --upgrade pip
          cd infra
          pip install -r requirements.txt

      - name: Deploy Frontend CDK Stack
        run: |
          cd infra
          cdk deploy FrontendStack --require-approval never


